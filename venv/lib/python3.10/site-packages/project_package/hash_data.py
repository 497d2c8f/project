from Crypto.Hash import SHA3_256
from .serialization import serialize_to_string
from .check  import check_data_type
import pickle


def hash_data(data, salt=None, iterations=1):
	data = _prepare_data_for_hashing(data)
	data = _salt_data(data, salt)
	return _hash_data_any_number_of_iterations(data, iterations)


def _prepare_data_for_hashing(data):
	if isinstance(data, bytes):
		return data
	else:
		return serialize_to_string(data)


def _salt_data(data, salt):
	if salt == None:
		return data
	else:
		salt = _prepare_data_for_hashing(salt)
		return data + salt


def _hash_data_any_number_of_iterations(data, iterations):
	_check_hashing_iterations(iterations)
	for i in range(iterations):
		data = _hash_data_once(data)
	return data


def _check_hashing_iterations(iterations):
	check_data_type(iterations, int)
	if not iterations > 0:
		raise ValueError('количество итераций должно быть больше нуля')


def _hash_data_once(data):
	return SHA3_256.new(data=data).digest()


HASH_LENGTH = len(hash_data(0))
