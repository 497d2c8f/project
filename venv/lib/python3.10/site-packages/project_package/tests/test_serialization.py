import pytest
import pickle
from contextlib import nullcontext as does_not_raise
from ..serialization import serialize_to_string, deserialize_from_string


@pytest.mark.parametrize(
	'data, result, expectation',
	[
		(
			1234,
			b'\x80\x04\x95\x04\x00\x00\x00\x00\x00\x00\x00M\xd2\x04.',
			does_not_raise()
		),
		(
			'text',
			b'\x80\x04\x95\x08\x00\x00\x00\x00\x00\x00\x00\x8c\x04text\x94.',
			does_not_raise()
		),
		(
			bytes(8),
			b'\x80\x04\x95\x0c\x00\x00\x00\x00\x00\x00\x00C\x08\x00\x00\x00\x00\x00\x00\x00\x00\x94.',
			does_not_raise()
		),
		(
			None,
			b'\x80\x04N.',
			does_not_raise()
		),
		(
			Exception,
			b'\x80\x04\x95\x1a\x00\x00\x00\x00\x00\x00\x00\x8c\x08builtins\x94\x8c\tException\x94\x93\x94.',
			does_not_raise()
		),
		(
			None,
			b'any data',
			pytest.raises(pickle.UnpicklingError)
		)
	]
)
def test_serialization_with_string(data, result, expectation):
	with expectation:
		assert deserialize_from_string(result) == data
		assert serialize_to_string(data) == result
